services:

  db:
    image: postgres:17-alpine
    container_name: "${POSTGRES_HOST}"
    user: postgres
    environment:
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_DB: "postgres"
      POSTGRES_MULTIPLE_DATABASES: "${POSTGRES_MULTIPLE_DATABASES}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      PGPORT: "${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:${POSTGRES_PORT}"
    restart: unless-stopped
    networks:
      proxy:
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ${PWD}/infra/docker/db/pg-init-scripts:/docker-entrypoint-initdb.d  # Mount initialization scripts

  pgweb:
    container_name: pgweb
    restart: always
    image: sosedoff/pgweb
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - db
    networks:
      proxy:

networks:
  proxy:
    external: true

volumes:
  postgres-data:
